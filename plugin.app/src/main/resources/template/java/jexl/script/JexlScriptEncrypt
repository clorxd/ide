package #{$package};

import com.teamide.util.EncryptUtil;
import com.teamide.util.StringUtil;

import org.springframework.stereotype.Component;

@Component
public class #{$classname} {

	public String MD5(Object arg) {
		if (arg == null) {
			return null;
		}
		String value = StringUtil.str(arg);
		if (StringUtil.isEmpty(value)) {
			return value;
		}
		return EncryptUtil.MD5(value);
	}

	public String MD5(Object arg, String key) {
		if (arg == null) {
			return null;
		}
		if (key == null) {
			return MD5(arg);
		}
		String value = StringUtil.str(arg);
		if (StringUtil.isEmpty(value)) {
			return value;
		}
		return EncryptUtil.MD5(value, key);
	}

	public String SHA1(Object arg) {
		if (arg == null) {
			return null;
		}
		String value = StringUtil.str(arg);
		if (StringUtil.isEmpty(value)) {
			return value;
		}
		return EncryptUtil.SHA1(value);
	}

	public String SHA1(Object arg, String key) {
		if (arg == null) {
			return null;
		}
		if (key == null) {
			return SHA1(arg);
		}
		String value = StringUtil.str(arg);
		if (StringUtil.isEmpty(value)) {
			return value;
		}
		return EncryptUtil.SHA1(value, key);
	}

	public String Base64Encode(Object arg) {
		if (arg == null) {
			return null;
		}
		String value = StringUtil.str(arg);
		if (StringUtil.isEmpty(value)) {
			return value;
		}
		return EncryptUtil.Base64Encode(value);
	}

	public String Base64Decode(Object arg) {
		if (arg == null) {
			return null;
		}
		String value = StringUtil.str(arg);
		if (StringUtil.isEmpty(value)) {
			return value;
		}
		return EncryptUtil.Base64Decode(value);
	}

	public String AESencode(Object arg, String key) {
		if (arg == null) {
			return null;
		}
		String value = StringUtil.str(arg);
		if (StringUtil.isEmpty(value)) {
			return value;
		}
		return EncryptUtil.AESencode(value, key);
	}

	public String AESdecode(Object arg, String key) {
		if (arg == null) {
			return null;
		}
		String value = StringUtil.str(arg);
		if (StringUtil.isEmpty(value)) {
			return value;
		}
		return EncryptUtil.AESdecode(value, key);
	}

}
