package #{$package};

#ifStart($customsqltype == 'SELECT_PAGE')#
import com.teamide.db.bean.PageSqlParam;
import com.teamide.bean.PageResultBean;
#ifEnd#
#ifStart($customsqltype != 'SELECT_PAGE')#
import com.teamide.db.bean.SqlParam;
#ifEnd#

import com.teamide.dao.IDao;
import com.teamide.param.DataParam;
import com.teamide.jexl.JexlTool;
import com.teamide.util.ObjectUtil;
import com.teamide.util.StringUtil;

/**
 * SQL Dao 修改
 * #{$comment}
 */

@javax.annotation.Resource(name="#{$propertyname}")
public class #{$classname} {
	
	/**
	 * 执行
	 */
	#ifStart($customsqltype == 'SELECT_ONE')#
	public Map<String, Object> invoke(JSONObject data) {
	#ifEnd#
	#ifStart($customsqltype == 'SELECT_LIST')#
	public List<Map<String, Object>> invoke(JSONObject data) {
	#ifEnd#
	#ifStart($customsqltype == 'SELECT_PAGE')#
	public PageResultBean<Map<String, Object>> invoke(JSONObject data) {
	#ifEnd#
	#ifStart($customsqltype == null)#
	public Map<String, Object> invoke(JSONObject data) {
	#ifEnd#
		
		Dao dao = AppFactory.getDao();
		
		// 组合SQL Param
		#ifStart($sqlType == 'SELECT_ONE')#
		SqlParam sqlParam = buildSqlParam(data);
		
		return dao.queryOne(sqlParam);
		#ifEnd#
		#ifStart($sqlType == 'SELECT_LIST')#
		SqlParam sqlParam = buildSqlParam(data);
		
		return dao.queryList(sqlParam);
		#ifEnd#
		#ifStart($sqlType == 'SELECT_PAGE')#
		PageSqlParam pageSqlParam = buildSqlParam(data);
		
		return dao.queryPage(pageSqlParam);
		#ifEnd#
		#ifStart($customsqltype == null)#
		SqlParam sqlParam = buildSqlParam(data);
		int result = dao.execute(sqlParam);
		
		return sqlParam.getParam();
		#ifEnd#
	}
	
	/**
	 * 组合SQL
	 */
	#ifStart($customsqltype == 'SELECT_PAGE')#
	public PageSqlParam buildSqlParam(JSONObject data) {
	#ifEnd#
	#ifStart($customsqltype != 'SELECT_PAGE')#
	public SqlParam buildSqlParam(JSONObject data) {
	#ifEnd#
		// 用于暂存字段取到的值
		Object value = null;
		// SQL执行用到的参数，SQL中使用“:key”作占位符
		Map<String, Object> param = new HashMap<String, Object>();
		
		// SQL语句
		StringBuffer sql = new StringBuffer();
		// 组合SQL语句
	#forStart($sql, $one)#
		#ifStart($one.condition == null)#
			#ifStart($one.sql != null)#
		sql.append("#{$one.sql}");
			#ifEnd#
		#ifEnd#
		#ifStart($one.condition != null)#
		if(ObjectUtil.isTrue(JexlTool.invoke("#{$one.condition}", data))){
			#ifStart($one.sql != null)#
			sql.append("#{$one.sql}");
			#ifEnd#
		}
		#ifEnd#
	#forEnd#
	
	#ifStart($customsqltype == 'SELECT_PAGE')#
		// 分页查询的统计语句
		StringBuffer countSql = new StringBuffer();
		// 统计语句
	#forStart($countSql, $one)#
		#ifStart($one.condition == null)#
			#ifStart($one.sql != null)#
		countSql.append("#{$one.sql}");
			#ifEnd#
		#ifEnd#
		#ifStart($one.condition != null)#
		if(ObjectUtil.isTrue(JexlTool.invoke("#{$one.condition}", data))){
			#ifStart($one.sql != null)#
			countSql.append("#{$one.sql}");
			#ifEnd#
		}
		#ifEnd#
	#forEnd#
	#ifEnd#
	
		#ifStart($customsqltype == 'SELECT_PAGE')#
		PageSqlParam pageSqlParam = new PageSqlParam(sql.toString(), countSql.toString(), param);
		// 获取页码和每页数量
		int pagesize = data.getIntValue("_pagesize");
		int pageindex = data.getIntValue("_pageindex");
		pageSqlParam.setPagesize(pagesize);
		pageSqlParam.setPageindex(pageindex);
		
		return pageSqlParam;
		#ifEnd#
		#ifStart($customsqltype != 'SELECT_PAGE')#
		SqlParam sqlParam = new SqlParam(sql.toString(), param);
		return sqlParam;
		#ifEnd#
	}
}