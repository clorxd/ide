package #{$package};

import java.util.*;
import com.teamide.util.*;
import com.teamide.exception.*;

import com.alibaba.fastjson.*;

import #{$app_factory.$package}.#{$app_factory.$classname};

import com.teamide.db.bean.SqlParam;

import com.teamide.dao.IDao;
import com.teamide.param.DataParam;
import com.teamide.jexl.JexlTool;

/**
 * SQL Dao 新增
 * #{$comment}
 */

@SuppressWarnings("unused")
#ifStart($usespringannotation == true)#
@org.springframework.stereotype.Service
#ifEnd#
public class #{$classname} {
	
	/**
	 * 执行
	 */
	public Map<String, Object> invoke(JSONObject data) throws Exception {
		
		#ifStart($database == null)#
		IDao dao = #{$app_factory.$classname}.getDao(data);
		#ifEnd#
		#ifStart($database != null)#
		IDao dao = #{$app_factory.$classname}.getDaoFor#{$database.name}(data);
		#ifEnd#
		
		SqlParam sqlParam = buildSqlParam(data);
		#ifStart($autoincrement_key == null)#
		int result = dao.execute(sqlParam);
		#ifEnd#
		#ifStart($autoincrement_key != null)#
		List<Object> keyValues = new ArrayList<Object>();
		int result = dao.execute(sqlParam, keyValues);
		if(keyValues.size() > 0){
			sqlParam.getParam().put("#{$autoincrement_key}", keyValues.get(0));
		}
		#ifEnd#
		
		return sqlParam.getParam();
	}
	
	/**
	 * 组合SQL
	 */
	public SqlParam buildSqlParam(JSONObject data) throws Exception {
		// 用于暂存字段取到的值
		Object value = null;
		// SQL执行用到的参数，SQL中使用“:key”作占位符
		Map<String, Object> param = new HashMap<String, Object>();
		
		// SQL语句
		StringBuffer sql = new StringBuffer();
		// 新增语句字段SQL
		StringBuffer columnSql = new StringBuffer();
		// 新增语句字段映射值SQL
		StringBuffer valueSql = new StringBuffer();
		
#{$content}

		// 去除结尾“,”
		if(columnSql.toString().endsWith(",")){
			columnSql.setLength(columnSql.length() - 1);
		}
		if(valueSql.toString().endsWith(",")){
			valueSql.setLength(valueSql.length() - 1);
		}
	
		// 拼接新增SQL语句
		sql.append("(").append(columnSql).append(")");
		sql.append(" VALUES (").append(valueSql).append(")");
		
		SqlParam sqlParam = new SqlParam(sql.toString(), param);
		return sqlParam;
	}
}